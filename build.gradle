import com.mmodding.gradle.api.EnvironmentTarget

plugins {
	id 'maven-publish'
	alias libs.plugins.fabric.loom
	alias libs.plugins.mmodding.gradle
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url "https://maven.quiltmc.org/repository/release" }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com' }
	maven { url 'https://maven.willbl.dev/releases' }
	maven { url 'https://maven.ladysnake.org/releases' }
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft

	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }

	modImplementation libs.fabric.loader

	// Fabric API
	modImplementation libs.fabric.api

	// MModding Library
	modImplementation libs.mmodding

	// Double Jump Attribute
	modImplementation libs.double.jump.attribute

	// Trinkets
	modImplementation libs.trinkets

	include libs.double.jump.attribute
}

loom {
	mods {
		"archeon" {
			sourceSet("main")
		}
	}
}

mmodding {
	configureFabricModJson {
		name = "Archeon"
		namespace = "archeon"
		group = "com.mmodding"
		description = "This is the Official Version of Archeon. Archeon is a brand new dimension, full of new blocks, mobs and more! All you need to get there is a portal made of Mysterious Stone, filled with a magical energy made by the Wand of Nature!"
		icon = "assets/archeon/icon.png"
		addAuthor("MModding Team")
		addContributor("Aethyus (Author, Art Director, Project Manager)")
		addContributor("Aeramisu (Art Director, Project Manager, Composer, Concept Artist, Sound Designer)")
		addContributor("FirstMegaGame4 (Lead Developer, Project Manager)")
		addContributor("Chatoine (Modeler)")
		addContributor("Contributors [Aerod (Additional Art); Tim Tim Rurkowski (Composer); Rotch Gwylt (Composer); Scarecrowman (Composer)]")
		addContributor("Past [Aethyus (as Former Forge Version Developer trough MCreator); Mystoxi (Help on MCreator); Tenkite (Old Additional Art)]")
		withContact {
			it.homepage = "https://modrinth/mod/archeon"
			it.sources = "https://github.com/MModding/archeon"
			it.issues = "https://github.com/MModding/archeon/issues"
		}
		environment = EnvironmentTarget.ANY
		withEntrypoints {
			it.init("com.mmodding.archeon.Archeon")
			it.client("com.mmodding.archeon.client.ArcheonClient")
			it.custom("mmodding_bootstrap_init", "com.mmodding.archeon.bootstrap.ArcheonBootstrap")
		}
		addMixin("archeon.mixins.json")
		withDependencies {
			it.javaVersion = ">=" + 17
			it.minecraftVersion = "~" + libs.versions.minecraft.get()
			it.fabricLoaderVersion = ">=" + libs.versions.fabric.loader.get()
			// it.mmoddingLibraryVersion = ">=" + libs.versions.mmodding.get()
			it.fabricApiVersion = ">=" + libs.versions.fabric.api.get()
		}
		withCustom {
			it.put("fluidlogged", "archeon.fluidlogged.json")
		}
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE.md') {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
